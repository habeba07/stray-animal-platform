import React, { useEffect, useState } from 'react';  
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';  
import { Provider, useDispatch, useSelector } from 'react-redux';
import { store } from './redux/store';
import { setUserFromStorage } from './redux/slices/authSlice';
import { Container, CssBaseline, ThemeProvider, createTheme } from '@mui/material';
import DonationList from './components/Donations/DonationList';
import DonationForm from './components/Donations/DonationForm';

// Pages
import HomePage from './pages/HomePage';
import LoginPage from './pages/LoginPage';
import RegisterPage from './pages/RegisterPage';
import ReportFormPage from './pages/ReportFormPage';
import AnimalListPage from './pages/AnimalListPage';
import AnimalDetailPage from './pages/AnimalDetailPage';
import ReportListPage from './pages/ReportListPage';
import ReportDetailPage from './pages/ReportDetailPage';
import DashboardPage from './pages/DashboardPage';
import ForumPage from './pages/ForumPage'; // ⭐ ADD THIS LINE
import NavBar from './components/NavBar';

// Adoption Components
import AdopterProfileForm from './components/Adoption/AdopterProfileForm';
import AdoptionMatchesPage from './components/Adoption/AdoptionMatchesPage';
import AdoptionApplicationForm from './components/Adoption/AdoptionApplicationForm';
import AdoptionApplicationList from './components/Adoption/AdoptionApplicationList';

import ActivityFeed from './components/Community/ActivityFeed';
import RewardCatalog from './components/Community/RewardCatalog';
import AchievementDisplay from './components/Community/AchievementDisplay';

import VolunteerProfileForm from './components/Volunteer/VolunteerProfileForm';
import VolunteerOpportunityList from './components/Volunteer/VolunteerOpportunityList';
import MyAssignments from './components/Volunteer/MyAssignments';

import ResourceList from './components/Resources/ResourceList';
import ResourceDetail from './components/Resources/ResourceDetail';

import VirtualAdoptionForm from './components/VirtualAdoption/VirtualAdoptionForm';
import MyVirtualAdoptions from './components/VirtualAdoption/MyVirtualAdoptions';

import { NotificationProvider } from './context/NotificationContext';
import NotificationsPage from './pages/NotificationsPage';

import InventoryDashboard from './components/Inventory/InventoryDashboard';
import InventoryPage from './pages/InventoryPage';

import ImpactDashboard from './pages/ImpactDashboard';

import PredictiveDashboard from './pages/PredictiveDashboard';

import InteractiveLearningPage from './pages/InteractiveLearningPage';

// Create a theme
const theme = createTheme({
  palette: {
    primary: {
      main: '#1976d2',
    },
    secondary: {
      main: '#dc004e',
    },
  },
});

// Protected Route Component using Redux state
const ProtectedRoute = ({ children }) => {
  const { user } = useSelector((state) => state.auth);
  
  console.log('ProtectedRoute check - user from Redux:', !!user);
  
  // If not authenticated, redirect to login
  if (!user || !user.token) {
    return <Navigate to="/login" replace />;
  }
  
  // If authenticated, render the children
  return children;
};

// App Content Component (needs to be inside Provider to use Redux)
function AppContent() {
  const dispatch = useDispatch();
  const { user } = useSelector((state) => state.auth);

  // Initialize user from localStorage on app start
  useEffect(() => {
    console.log('App useEffect - initializing auth state');
    dispatch(setUserFromStorage());
  }, [dispatch]);

  console.log('App render - user from Redux:', !!user);

  return (
    <NotificationProvider>
      <ThemeProvider theme={theme}>
        <CssBaseline />
        <Router>
          <NavBar />
          <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
            <Routes>
              {/* Public routes */}
              <Route path="/" element={<HomePage />} />
              <Route path="/login" element={<LoginPage />} />
              <Route path="/register" element={<RegisterPage />} />
              <Route path="/animals" element={<AnimalListPage />} />
              <Route path="/animals/:id" element={<AnimalDetailPage />} />
	      <Route path="/interactive-learning" element={<InteractiveLearningPage />} />
              
              {/* Protected routes - require authentication */}
              <Route path="/reports" element={
                <ProtectedRoute>
                  <ReportListPage />
                </ProtectedRoute>
              } />
              <Route path="/reports/:id" element={
                <ProtectedRoute>
                  <ReportDetailPage />
                </ProtectedRoute>
              } />
              <Route path="/report-animal" element={
                <ProtectedRoute>
                  <ReportFormPage />
                </ProtectedRoute>
              } />
              <Route path="/dashboard" element={
                <ProtectedRoute>
                  <DashboardPage />
                </ProtectedRoute>
              } />
              
              {/* ⭐ ADD THIS FORUM ROUTE */}
              <Route path="/forum" element={
                <ProtectedRoute>
                  <ForumPage />
                </ProtectedRoute>
              } />
              
              {/* Adoption Routes */}
              <Route path="/adoption/profile" element={
                <ProtectedRoute>
                  <AdopterProfileForm />
                </ProtectedRoute>
              } />
              <Route path="/adoption/matches" element={
                <ProtectedRoute>
                  <AdoptionMatchesPage />
                </ProtectedRoute>
              } />
              <Route path="/adoption/apply/:animalId" element={
                <ProtectedRoute>
                  <AdoptionApplicationForm />
                </ProtectedRoute>
              } />
              <Route path="/adoption/applications" element={
                <ProtectedRoute>
                  <AdoptionApplicationList />
                </ProtectedRoute>
              } />

              <Route path="/donations" element={
                <ProtectedRoute>
                  <DonationList />
                </ProtectedRoute>
              } />
              <Route path="/donate/:campaignId" element={
                <ProtectedRoute>
                  <DonationForm />
                </ProtectedRoute>
              } />

              <Route path="/activities" element={
                <ProtectedRoute>
                  <ActivityFeed />
                </ProtectedRoute>
              } />

              <Route path="/rewards" element={
                <ProtectedRoute>
                  <RewardCatalog />
                </ProtectedRoute>
              } />

              <Route path="/achievements" element={
                <ProtectedRoute>
                  <AchievementDisplay />
                </ProtectedRoute>
              } />

              <Route path="/volunteer/profile" element={
                <ProtectedRoute>
                  <VolunteerProfileForm />
                </ProtectedRoute>
              } />
              <Route path="/volunteer/opportunities" element={
                <ProtectedRoute>
                  <VolunteerOpportunityList />
                </ProtectedRoute>
              } />
              <Route path="/volunteer/assignments" element={
                <ProtectedRoute>
                  <MyAssignments />
                </ProtectedRoute>
              } />

              <Route path="/resources" element={
                <ProtectedRoute>
                  <ResourceList />
                </ProtectedRoute>
              } />
              <Route path="/resources/:slug" element={
                <ProtectedRoute>
                  <ResourceDetail />
                </ProtectedRoute>
              } />

              <Route path="/virtual-adoptions/new/:animalId" element={
                <ProtectedRoute>
                  <VirtualAdoptionForm />
                </ProtectedRoute>
              } />
              <Route path="/virtual-adoptions/my" element={
                <ProtectedRoute>
                  <MyVirtualAdoptions />
                </ProtectedRoute>
              } />
              
              <Route path="/notifications" element={
                <ProtectedRoute>
                  <NotificationsPage />
                </ProtectedRoute>
              } />

              <Route path="/inventory/dashboard" element={
                <ProtectedRoute>
                  <InventoryDashboard />
                </ProtectedRoute>
              } />
              <Route path="/inventory/items" element={
                <ProtectedRoute>
                  <InventoryPage />
                </ProtectedRoute>
              } />

	     <Route path="/impact-dashboard" element={
  	       <ProtectedRoute>
                 <ImpactDashboard />
               </ProtectedRoute>
              } />

	    <Route path="/predictive-dashboard" element={
  	      <ProtectedRoute>
    		<PredictiveDashboard />
  	      </ProtectedRoute>
	      } />

            </Routes>
          </Container>
        </Router>
      </ThemeProvider>
    </NotificationProvider>
  );
}

function App() {
  return (
    <Provider store={store}>
      <AppContent />
    </Provider>
  );
}

export default App;